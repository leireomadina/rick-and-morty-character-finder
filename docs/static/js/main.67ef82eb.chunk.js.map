{"version":3,"sources":["service/api.js","images/neon-logo.png","components/Header.js","components/CharacterCard.js","images/morty-gif.gif","components/CharacterNotFound.js","components/CharacterList.js","components/CharacterDetail.js","components/Filters.js","components/App.js","index.js"],"names":["getDataFromApi","a","fetch","resp","ok","Error","json","data","results","Header","className","src","logo","alt","title","CharacterCard","props","to","id","image","name","species","width","height","viewBox","fill","xmlns","d","CharacterNotFound","gif","CharacterList","characterItems","characters","map","character","length","filterName","CharacterDetail","status","checkStatus","origin","episode","type","Filters","handleFilters","event","target","value","checked","onSubmit","preventDefault","htmlFor","placeholder","onChange","filterGender","filterStatus","filterSortedNyName","App","useState","setCharacters","setfilterName","setFilterGender","setFilterStatus","setfilterSortedNyName","useEffect","then","catch","console","error","exact","path","filteredCharacters","filter","toLowerCase","includes","gender","sort","b","renderFilteredCharacters","component","routeCharacterId","parseInt","match","params","characterId","selectedCharacter","find","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67ef82eb.chunk.js","sourcesContent":["const ENDPOINT = \"https://rickandmortyapi.com/api/character/\";\r\n\r\nconst getDataFromApi = async() => {\r\n  try {\r\n    const resp = await fetch(ENDPOINT);\r\n    if(!resp.ok) throw new Error(\"Im sorry, there has been a server error\");\r\n    const data = await resp.json();\r\n    return data.results;\r\n  } catch (err){\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default getDataFromApi;\r\n","export default __webpack_public_path__ + \"static/media/neon-logo.6eb4f643.png\";","import React from \"react\"\r\nimport logo from \"../images/neon-logo.png\"\r\nimport \"../stylesheets/layout/Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"main-header\">\r\n      <div className=\"main-header__container\">\r\n        <img src={logo} alt=\"Rick and Morty tv series logo\" title=\"Rick and Morty tv series logo\" className=\"main-header__image\"/>\r\n      </div>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../stylesheets/layout/CharacterCard.scss\";\r\n\r\nconst CharacterCard = (props) => {\r\n  const checkSpecies = () => {\r\n    return props.species === \"Human\" ? \"🌎\" : \"👽\";\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      to={`/character-detail/${props.id}`}\r\n      title={\"See this character's details\"}\r\n    >\r\n      <article className=\"card\">\r\n        <img\r\n          src={props.image}\r\n          alt={`${props.name}`}\r\n          title={`${props.name}`}\r\n          className=\"card__image\"\r\n        />\r\n        <div className=\"card__inner\">\r\n          <h2 className=\"card__name\">{props.name}</h2>\r\n          <p className=\"card__species\">\r\n            {props.species}\r\n            <span className=\"card__species--icon\"> {checkSpecies()}</span>\r\n          </p>\r\n          <svg className=\"card__icon\" width=\"26\" height=\"24\" viewBox=\"0 0 26 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M26 12.0404L13.4469 0H7.84063L18.525 10.0606H0V13.9798H18.4031L7.88125 24H13.4469L26 12.0404Z\"/>\r\n          </svg>\r\n        </div>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n};\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/morty-gif.9e946522.gif\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../stylesheets/layout/CharacterNotFound.scss\";\r\nimport gif from \"../images/morty-gif.gif\";\r\n\r\nconst CharacterNotFound = (props) => {\r\n  return (\r\n    <div className=\"not-found-container\">\r\n      <p className=\"not-found-container__text\">\r\n        There isn't any character that matches your search!\r\n      </p>\r\n      <img\r\n        src={gif}\r\n        className=\"not-found-container__gif\"\r\n        alt=\"Surprised Morty gif\"\r\n        title=\"Surprised Morty gif\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterNotFound.propTypes = {\r\n  filterName: PropTypes.string,\r\n};\r\n\r\nexport default CharacterNotFound;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CharacterCard from './CharacterCard';\r\nimport CharacterNotFound from './CharacterNotFound';\r\nimport '../stylesheets/layout/CharacterList.scss';\r\n\r\nconst CharacterList = (props) => {\r\n\tconst characterItems = props.characters.map((character) => {\r\n\t\treturn (\r\n\t\t\t<li key={character.id} className=\"cards-container__item\">\r\n\t\t\t\t<CharacterCard\r\n\t\t\t\t\tid={character.id}\r\n\t\t\t\t\tname={character.name}\r\n\t\t\t\t\timage={character.image}\r\n\t\t\t\t\tspecies={character.species}\r\n\t\t\t\t/>\r\n\t\t\t</li>\r\n\t\t);\r\n\t});\r\n\r\n\tconst notFound = () => {\r\n\t\treturn <CharacterNotFound filterName={props.filterName} />;\r\n\t};\r\n\r\n\tif (characterItems.length === 0) {\r\n\t\treturn notFound();\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<section className=\"cards-section\">\r\n\t\t\t\t<ul className=\"cards-container\">{characterItems}</ul>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nCharacterList.propTypes = {\r\n\tcharacter: PropTypes.array,\r\n\tid: PropTypes.number,\r\n\tname: PropTypes.string,\r\n\timage: PropTypes.string,\r\n\tspecies: PropTypes.string,\r\n\tfilterName: PropTypes.string,\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/layout/CharacterDetail.scss\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const checkStatus = () => {\r\n    if (props.status === \"Dead\") {\r\n      return \"💀\";\r\n    }\r\n  };\r\n  const checkSpecies = () => {\r\n    return props.species === \"Human\" ? \"🌎\" : \"👽\";\r\n  };\r\n\r\n  return (\r\n    <main className=\"detail-page\">\r\n      <article className=\"detail-card\">\r\n        <div className=\"detail-card__image-container\">\r\n          <img\r\n            src={props.image}\r\n            alt={`${props.name}`}\r\n            title={`${props.name}`}\r\n            className=\"detail-card__image\"\r\n          />\r\n        </div>\r\n        <div className=\"detail-card__content\">\r\n          <h2 className=\"detail-card__name\">{props.name}</h2>\r\n          <p className=\"detail-card__text\">\r\n            <strong>Status:</strong> {props.status}\r\n            <span className=\"detail-card__icon\"> {checkStatus()}</span>\r\n          </p>\r\n          <p className=\"detail-card__text\">\r\n            <strong>Species:</strong> {props.species}\r\n            <span className=\"detail-card__icon\"> {checkSpecies()}</span>\r\n          </p>\r\n          <p className=\"detail-card__text\">\r\n            <strong>Origin:</strong> {props.origin}\r\n          </p>\r\n          <p className=\"detail-card__text\">\r\n            <strong>Episodes:</strong> {props.episode}\r\n          </p>\r\n          <Link to={\"/\"}>\r\n            <button type=\"button\" className=\"detail-card__button\">\r\n              Go back\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </article>\r\n    </main>\r\n  );\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  status: PropTypes.string,\r\n  species: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  episode: PropTypes.number,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport '../stylesheets/layout/Filters.scss';\r\n\r\nconst Filters = (props) => {\r\n\tconst handleFilters = (event) => {\r\n\t\tconst data = {\r\n\t\t\tname: event.target.name,\r\n\t\t\tvalue: event.target.value,\r\n\t\t\tchecked: event.target.checked,\r\n\t\t};\r\n\t\tprops.handleFilters(data);\r\n\t};\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"form-section\">\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n        \r\n\t\t\t\t<fieldset className=\"form-section__container\">\r\n\t\t\t\t\t<label htmlFor=\"character\" className=\"form-section__label\">\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"character\"\r\n\t\t\t\t\t\tname=\"character\"\r\n\t\t\t\t\t\tplaceholder=\"Search you favorite character\"\r\n\t\t\t\t\t\tonChange={handleFilters}\r\n\t\t\t\t\t\tvalue={props.filterName}\r\n\t\t\t\t\t\tclassName=\"form-section__input\"\r\n\t\t\t\t\t></input>\r\n\t\t\t\t</fieldset>\r\n\r\n\t\t\t\t<fieldset className=\"form-section__container\">\r\n\t\t\t\t\t<label htmlFor=\"gender\" className=\"form-section__label\">\r\n\t\t\t\t\t\tGender\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tid=\"gender\"\r\n\t\t\t\t\t\tname=\"gender\"\r\n\t\t\t\t\t\tonChange={handleFilters}\r\n\t\t\t\t\t\tvalue={props.filterGender}\r\n\t\t\t\t\t\tclassName=\"form-section__select\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value=\"all\" className=\"form-section__option\">\r\n\t\t\t\t\t\t\tAll\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"female\" className=\"form-section__option\">\r\n\t\t\t\t\t\t\tFemale\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"male\" className=\"form-section__option\">\r\n\t\t\t\t\t\t\tMale\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"unknown\" className=\"form-section__option\">\r\n\t\t\t\t\t\t\tUnknown\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</fieldset>\r\n\r\n\t\t\t\t<fieldset className=\"form-section__container\">\r\n\t\t\t\t\t<label htmlFor=\"status\" className=\"form-section__label\">\r\n\t\t\t\t\t\tStatus\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tid=\"status\"\r\n\t\t\t\t\t\tname=\"status\"\r\n\t\t\t\t\t\tonChange={handleFilters}\r\n\t\t\t\t\t\tvalue={props.filterStatus}\r\n\t\t\t\t\t\tclassName=\"form-section__select\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value=\"all\" className=\"form-section__option\">\r\n\t\t\t\t\t\t\tAll\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"alive\" className=\"form-section__option\">\r\n\t\t\t\t\t\t\tAlive\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"dead\" className=\"form-section__option\">\r\n\t\t\t\t\t\t\tDead\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option value=\"unknown\" className=\"form-section__option\">\r\n\t\t\t\t\t\t\tUnknown\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</fieldset>\r\n\r\n\t\t\t\t<fieldset className=\"form-section__container\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"sorted\"\r\n\t\t\t\t\t\tid=\"sorted\"\r\n\t\t\t\t\t\tchecked={props.filterSortedNyName}\r\n\t\t\t\t\t\tonChange={handleFilters}\r\n\t\t\t\t\t\tclassName=\"form-section__checkbox\"\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t<span className=\"form-section__checkbox--customized\"></span>\r\n\t\t\t\t\t<label htmlFor=\"sorted\" className=\"form-section__label\">\r\n\t\t\t\t\t\tSort by name\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</fieldset>\r\n\r\n\t\t\t\t{/* <button type=\"button\">Reset</button> */}\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nFilters.propTypes = {\r\n\thandleChange: PropTypes.func,\r\n\tfilterName: PropTypes.string,\r\n\tfilterGender: PropTypes.string,\r\n\tfilterStatus: PropTypes.string,\r\n\tfilterSortedNyName: PropTypes.bool,\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport getDataFromApi from \"../service/api\";\nimport Header from \"./Header\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Filters from \"./Filters\";\nimport \"../stylesheets/App.scss\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setfilterName] = useState(\"\");\n  const [filterGender, setFilterGender] = useState(\"all\");\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [filterSortedNyName, setfilterSortedNyName] = useState(false);\n\n  // API call\n  useEffect(\n    () => {\n      getDataFromApi()\n        .then((data) => {\n          setCharacters(data);\n        })\n        .catch(console.error);\n    },\n    //Empty array so that the first useEffect parameter gets executed only once\n    []\n  );\n\n  // Handlers\n  const handleFilters = (data) => {\n    if (data.name === \"character\") {\n      setfilterName(data.value);\n    }\n    if (data.name === \"gender\") {\n      setFilterGender(data.value);\n    }\n    if (data.name === \"status\") {\n      setFilterStatus(data.value);\n    }\n    if (data.name === \"sorted\") {\n      setfilterSortedNyName(data.checked);\n    }\n  };\n\n  // Filters\n  const renderFilteredCharacters = () => {\n    let filteredCharacters = characters\n      .filter((character) =>\n        character.name.toLowerCase().includes(filterName.toLowerCase())\n      )\n      .filter(\n        (character) =>\n          filterGender === \"all\" ||\n          character.gender.toLowerCase() === filterGender\n      )\n      .filter(\n        (character) =>\n          filterStatus === \"all\" ||\n          character.status.toLowerCase() === filterStatus\n      );\n\n    if (filterSortedNyName) {\n      // sorts the characters alphabetically\n      filteredCharacters.sort((a, b) => {\n        if (a.name < b.name) {\n          return -1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n\n    return filteredCharacters;\n  };\n\n  // Render character detail page\n  const renderDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const selectedCharacter = characters.find((character) => {\n      const characterId = character.id;\n      return routeCharacterId === characterId;\n    });\n\n    if (selectedCharacter !== undefined) {\n      return (\n        <>\n          <Header />\n          <CharacterDetail\n            image={selectedCharacter.image}\n            name={selectedCharacter.name}\n            status={selectedCharacter.status}\n            species={selectedCharacter.species}\n            origin={selectedCharacter.origin.name}\n            episode={selectedCharacter.episode.length}\n          />\n        </>\n      );\n    } else {\n      return <p>The character you are looking for doesn't exist.</p>;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Header />\n          <main className=\"main\">\n            <Filters\n              handleFilters={handleFilters}\n              filterName={filterName}\n              filterGender={filterGender}\n              filterStatus={filterStatus}\n              filterSortedNyName={filterSortedNyName}\n            />\n            <CharacterList\n              characters={renderFilteredCharacters()}\n              filterName={filterName}\n            />\n          </main>\n        </Route>\n        <Route path=\"/character-detail/:characterId\" component={renderDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  characters: PropTypes.array,\n  handleFilters: PropTypes.func,\n  renderDetail: PropTypes.func,\n  filterName: PropTypes.string,\n  filterGender: PropTypes.string,\n  filterStatus: PropTypes.string,\n  filterSortedNyName: PropTypes.bool,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  status: PropTypes.string,\n  species: PropTypes.string,\n  origin: PropTypes.string,\n  episode: PropTypes.number,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}